
import { type ExamResult } from "@/lib/mockData";
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Progress } from "@/components/ui/progress";

interface FeedbackModalProps {
  result: ExamResult;
  open: boolean;
  onClose: () => void;
}

const FeedbackModal = ({ result, open, onClose }: FeedbackModalProps) => {
  const scorePercentage = (result.score / result.maxScore) * 100;
  
  const getScoreColor = () => {
    if (scorePercentage >= 80) return "text-green-600";
    if (scorePercentage >= 70) return "text-blue-600";
    if (scorePercentage >= 60) return "text-amber-600";
    return "text-red-600";
  };

  const getProgressColor = () => {
    if (scorePercentage >= 80) return "bg-green-600";
    if (scorePercentage >= 70) return "bg-blue-600";
    if (scorePercentage >= 60) return "bg-amber-600";
    return "bg-red-600";
  };

  const getIcon = () => {
    if (scorePercentage >= 80) return "üåü";
    if (scorePercentage >= 70) return "üëç";
    if (scorePercentage >= 60) return "üôÇ";
    return "üìö";
  };

  const getTitle = () => {
    if (scorePercentage >= 80) return "‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°!";
    if (scorePercentage >= 70) return "‡∏î‡∏µ‡∏°‡∏≤‡∏Å!";
    if (scorePercentage >= 60) return "‡∏ú‡πà‡∏≤‡∏ô";
    return "‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á";
  };

  return (
    <Dialog open={open} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <DialogTitle className="text-center flex items-center justify-center gap-2">
            <span>{getIcon()}</span>
            <span>{getTitle()}</span>
          </DialogTitle>
          <DialogDescription className="text-center">
            {result.courseName} ({result.examType === "midterm" ? "‡∏™‡∏≠‡∏ö‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ" : result.examType === "final" ? "‡∏™‡∏≠‡∏ö‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ" : "‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏¢‡πà‡∏≠‡∏¢"})
          </DialogDescription>
        </DialogHeader>
        
        <div className="space-y-6">
          <div className="flex justify-between items-center p-4 bg-gray-50 dark:bg-gray-900 rounded-lg">
            <span className="text-base font-medium">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</span>
            <span className={`text-xl font-bold ${getScoreColor()}`}>
              {result.score}/{result.maxScore} 
              <span className="text-sm text-gray-500 font-normal ml-1">
                ({scorePercentage.toFixed(0)}%)
              </span>
            </span>
          </div>
          
          <div className="p-4 bg-gray-50 dark:bg-gray-900 rounded-lg">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium">‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÉ‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</span>
              <span className="text-sm font-bold">TOP {100 - result.percentile}%</span>
            </div>
            <Progress value={result.percentile} className="h-2 mb-2" indicatorClassName={getProgressColor()} />
            <p className="text-xs text-gray-500">
              ‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≥‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ {result.percentile}% ‡πÉ‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡∏ô‡∏µ‡πâ
            </p>
          </div>
          
          <div className="p-4 bg-gray-50 dark:bg-gray-900 rounded-lg">
            <h4 className="font-medium mb-2">‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</h4>
            <p className="text-sm text-gray-700 dark:text-gray-300">
              {result.feedback || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå"}
            </p>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};

export default FeedbackModal;
